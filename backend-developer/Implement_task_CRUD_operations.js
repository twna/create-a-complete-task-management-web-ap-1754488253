{
    "code": "// Import necessary modules\nconst express = require('express');\nconst router = express.Router();\nconst Task = require('../models/task'); // Assuming Task is the Mongoose model\n\n// Create a new task\nrouter.post('/tasks', async (req, res) => {\n    const task = new Task(req.body);\n    try {\n        await task.save();\n        res.status(201).send(task);\n    } catch (error) {\n        res.status(400).send(error);\n    }\n});\n\n// Retrieve all tasks\nrouter.get('/tasks', async (req, res) => {\n    try {\n        const tasks = await Task.find({});\n        res.send(tasks);\n    } catch (error) {\n        res.status(500).send();\n    }\n});\n\n// Retrieve a task by id\nrouter.get('/tasks/:id', async (req, res) => {\n    const _id = req.params.id;\n    try {\n        const task = await Task.findById(_id);\n        if (!task) {\n            return res.status(404).send();\n        }\n        res.send(task);\n    } catch (error) {\n        res.status(500).send();\n    }\n});\n\n// Update a task\nrouter.patch('/tasks/:id', async (req, res) => {\n    const updates = Object.keys(req.body);\n    const allowedUpdates = ['description', 'completed']; // Assuming these are the fields that can be updated\n    const isValidOperation = updates.every((update) => allowedUpdates.includes(update));\n\n    if (!isValidOperation) {\n        return res.status(400).send({ error: 'Invalid updates!' });\n    }\n\n    try {\n        const task = await Task.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true });\n        if (!task) {\n            return res.status(404).send();\n        }\n        res.send(task);\n    } catch (error) {\n        res.status(400).send(error);\n    }\n});\n\n// Delete a task\nrouter.delete('/tasks/:id', async (req, res) => {\n    try {\n        const task = await Task.findByIdAndDelete(req.params.id);\n        if (!task) {\n            return res.status(404).send();\n        }\n        res.send(task);\n    } catch (error) {\n        res.status(500).send();\n    }\n});\n\nmodule.exports = router;",
    "summary": "Implemented CRUD operations for tasks in an Express.js application. The code includes routes for creating, retrieving (both all tasks and a single task by ID), updating, and deleting tasks. The Task model from Mongoose is used to interact with the MongoDB database, as set up by the database-admin agent.",
    "checklist": [
        "Create a new task with POST /tasks",
        "Retrieve all tasks with GET /tasks",
        "Retrieve a single task by ID with GET /tasks/:id",
        "Update a task with PATCH /tasks/:id",
        "Delete a task with DELETE /tasks/:id"
    ]
}